import { colors as pallete } from './Pallete';
import type { ColorTokens } from './Type';

export const LightColorTokens = (
  colors: typeof pallete = pallete,
  accentColor: string = colors.Primary[500],
  positiveColor: string = colors.green[500],
  negativeColor: string = colors.red[500],
  linkColor: string = colors.blue[500],
  contrastWhite: string = colors.white[1000]
): ColorTokens => {
  return {
    colorBackgroundAccent: accentColor,
    colorBackgroundPositive: positiveColor,
    colorBackgroundNegative: negativeColor,
    colorBackgroundLink: linkColor,
    colorBackgroundPrimary: colors.white[1000],
    colorBackgroundSecondary: colors.slate[400],
    colorBackgroundTertiary: colors.slate[300],
    colorBackgroundLight: colors.slate[200],
    colorBackgroundLighter: colors.slate[100],
    colorBackgroundElevated: colors.white[1000],
    colorBackgroundModal: colors.white[1000],
    colorBorderAccent: accentColor,
    colorBorderPositive: positiveColor,
    colorBorderNegative: negativeColor,
    colorBorderLink: linkColor,
    colorBorderStrong: colors.neutral[1000],
    colorBorderMedium: colors.neutral[400],
    colorBorderSubtle: colors.neutral[300],
    colorBorderLight: colors.neutral[200],
    colorBorderLighter: colors.neutral[100],
    colorBorderAlpha: colors.neutral.a50,
    colorForegroundAccent: accentColor,
    colorForegroundPositive: positiveColor,
    colorForegroundNegative: negativeColor,
    colorForegroundLink: linkColor,
    colorForegroundPrimary: colors.neutral[1000],
    colorForegroundSecondary: colors.neutral[800],
    colorForegroundTertiary: colors.neutral[600],
    colorForegroundLight: colors.neutral[500],
    colorForegroundLighter: colors.neutral[400],
    colorForegroundInvariable: contrastWhite,
    colorStatePrimaryDisabled: colors.neutral.a100,
    colorStatePrimaryHover: colors.neutral.a50,
    colorStatePrimaryPressed: colors.neutral.a150,
    colorStateAccentDisabled: colors.Primary.a150,
    colorStateAccentHover1: colors.Primary[400],
    colorStateAccentHover2: colors.Primary.a50,
    colorStateAccentPressed1: colors.Primary[600],
    colorStateAccentPressed2: colors.Primary.a100,
    colorStateContrastWhiteDisabled: colors.white.a500,
  };
};

export const DarkColorTokens = (
  colors: typeof pallete = pallete,
  accentColor: string = colors.Primary[500],
  positiveColor: string = colors.green[500],
  negativeColor: string = colors.red[500],
  linkColor: string = colors.blue[500],
  contrastWhite: string = colors.white[1000]
): ColorTokens => {
  return {
    colorBackgroundAccent: accentColor,
    colorBackgroundPositive: positiveColor,
    colorBackgroundNegative: negativeColor,
    colorBackgroundLink: linkColor,
    colorBackgroundPrimary: colors.neutral[1000],
    colorBackgroundSecondary: colors.slate[800],
    colorBackgroundTertiary: colors.slate[700],
    colorBackgroundLight: colors.slate[600],
    colorBackgroundLighter: colors.slate[500],
    colorBackgroundElevated: colors.neutral[900],
    colorBackgroundModal: colors.neutral[800],
    colorBorderAccent: accentColor,
    colorBorderPositive: positiveColor,
    colorBorderNegative: negativeColor,
    colorBorderLink: linkColor,
    colorBorderStrong: colors.white[1000],
    colorBorderMedium: colors.neutral[500],
    colorBorderSubtle: colors.neutral[600],
    colorBorderLight: colors.neutral[700],
    colorBorderLighter: colors.neutral[800],
    colorBorderAlpha: colors.white.a100,
    colorForegroundAccent: accentColor,
    colorForegroundPositive: positiveColor,
    colorForegroundNegative: negativeColor,
    colorForegroundLink: linkColor,
    colorForegroundPrimary: colors.white[1000],
    colorForegroundSecondary: colors.neutral[100],
    colorForegroundTertiary: colors.neutral[200],
    colorForegroundLight: colors.neutral[300],
    colorForegroundLighter: colors.neutral[400],
    colorForegroundInvariable: contrastWhite,
    colorStatePrimaryDisabled: colors.neutral.a100,
    colorStatePrimaryHover: colors.neutral.a50,
    colorStatePrimaryPressed: colors.neutral.a150,
    colorStateAccentDisabled: colors.Primary.a150,
    colorStateAccentHover1: colors.Primary[400],
    colorStateAccentHover2: colors.Primary.a50,
    colorStateAccentPressed1: colors.Primary[600],
    colorStateAccentPressed2: colors.Primary.a100,
    colorStateContrastWhiteDisabled: colors.white.a500,
  };
};
